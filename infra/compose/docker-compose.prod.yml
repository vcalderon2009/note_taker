# Production Docker Compose Configuration
# This file provides production-optimized settings

version: '3.8'

services:
  # Production API configuration
  api:
    restart: always
    environment:
      - DEBUG=false
      - LOG_LEVEL=info
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/ready"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 120s

  # Production Frontend configuration
  frontend:
    restart: always
    environment:
      - NODE_ENV=production
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s

  # Production Ollama configuration
  ollama:
    restart: always
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '2.0'
        reservations:
          memory: 4G
          cpus: '1.0'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Production Database configuration
  db:
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U note_user -d note_db"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Production monitoring service
  monitor:
    image: curlimages/curl:latest
    depends_on:
      api:
        condition: service_healthy
      frontend:
        condition: service_healthy
    command: >
      sh -c "
        echo '🔍 Production monitoring started' &&
        while true; do
          timestamp=\$$(date '+%Y-%m-%d %H:%M:%S')
          status=\$$(curl -s http://api:8000/api/health | jq -r '.status' 2>/dev/null || echo 'ERROR')
          models=\$$(curl -s http://api:8000/api/health | jq -r '.models | length' 2>/dev/null || echo '0')
          echo \"\$$timestamp: Status=\$$status, Models=\$$models/2\"
          sleep 60
        done
      "
    restart: always
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.1'
